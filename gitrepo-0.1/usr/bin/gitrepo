#!/bin/bash

function _help()
{
	
printf "Gitrepo 0.01 ( https://github.com/dekiakbar/LinuxShell )
	Usage: gitrepo [-h] [-v] [-c] [-n <repository_name>] or [-n <repository_name>:<license>]

[Options]
	-c : Check and list all repository
	-h : Show this help
	-n : Create new repository
	-v : Show the version of this package
	"
echo "
[License Options]"
echo "	afl-3.0				isc"
echo "	agpl-3.0			lgpl-2.1"
echo "	apache-2.0			lgpl-3.0"
echo "	artistic-2.0       		lppl-1.3c"
echo "	bsd-2-clause			mit"
echo "	bsd-3-clause-clear		mpl-2.0"
echo "	bsd-3-clause 			ms-pl"
echo "	bsl-1.0				ms-rl"
echo "	cc-by-4.0			ncsa"
echo "	cc-by-sa-4.0			ofl-1.1"
echo "	cc0-1.0				osl-3.0"
echo "	ecl-2.0				postgresql"
echo "	epl-1.0				unlicense"
echo "	eupl-1.1			wtfpl"
echo "	gpl-2.0				zlib"
echo "	gpl-3.0"

printf "
[Example] 
	gitrepo -n coba:mit
	gitrepo -n coba
"
}

function _cekrepo(){
	read -p "Github Username :" username
	if [[ -n $username ]]; then
		ambil="$(curl -s -g https://api.github.com/users/$username/repos | grep 'name')"
		IFS=','
		hasil=($ambil)
		for i in ${hasil[@]}; do 
			if [[ $hitung < 2 ]]; then
			 	echo $i;
			 	hitung=$((hitung+1))
			else 
				hitung=0; 
			fi 
		done 
	else
		echo "Username must be filled"
	fi
}

function _buatrepo(){
		namarepo=${argumen[0]}
		lisensi=${argumen[1]}
		echo $namarepo
		echo $lisensi
	read -p 'Github username :' username 
	if [[ -n $namarepo && -n $username && -n $lisensi ]]; then
		curl -u $username https://api.github.com/user/repos -d "{\"name\":\"$namarepo\",\"license_template\":\"$lisensi\"}"
	else if [[ -n $namarepo && -n $username && -z $lisensi ]]; then
		curl -u $username https://api.github.com/user/repos -d "{\"name\":\"$namarepo\"}"
	else if [[ -z $username ]]; then
		echo "Username must be filled"
	else if [[ -z $namarepo ]]; then
		echo "Repository name must be filled"
	fi
	fi
	fi
	fi
}

while getopts ":chn:v" opt; do
  case $opt in
	  	c)  _cekrepo;;

	    h)  _help;;

	    n)  perintah=$OPTARG
			set -f
			IFS=':'
			argumen=($perintah)
			_buatrepo;;

	    v)	echo "`basename $0` version 0.1" ;;

	    \?)	echo "Invalid option: -$OPTARG" >&2 ;;

	    *)	echo "Need an argument!";;
  esac
done

